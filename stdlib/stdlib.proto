syntax = "proto3";

import "scanner/types.proto";
package scanner.proto;

message BlurArgs {
  int32 kernel_size = 1;
  float sigma = 2;
}

message MontageArgs {
  int64 num_frames = 1;
  int32 target_width = 4;
  int32 frames_per_row = 6;
}

message CaffeInputArgs {
  NetDescriptor net_descriptor = 1;
  int32 batch_size = 2;
}

message CaffeArgs {
  NetDescriptor net_descriptor = 1;
  int32 batch_size = 2;
}

message FacenetArgs {
  CaffeArgs caffe_args = 1;
  string templates_path = 2;
  float scale = 3;
  float threshold = 4;
}

message CPM2Args {
  CaffeArgs caffe_args = 1;
  float scale = 2;
}

message OpenPoseArgs {
  string model_directory = 1;

  int32 pose_num_scales = 2;
  float pose_scale_gap = 3;

  bool compute_hands = 4;
  int32 hand_num_scales = 5;
  float hand_scale_gap = 6;

  bool compute_face = 7;
}

message Camera {
  repeated float p = 1 [packed=true];
}

message GipumaArgs {
  float min_disparity = 2;
  float max_disparity = 3;
  float min_depth = 4;
  float max_depth = 5;
  float iterations = 6;
  int32 kernel_width = 7;
  int32 kernel_height = 8;
}

enum ExtractorType {
  SIFT = 0;
  SURF = 1;
}

message FeatureExtractorArgs {
  ExtractorType feature_type = 1;
}

message Keypoint {
  float x = 1;
  float y = 2;
}

message ResizeArgs {
  int32 width = 1;
  int32 height = 2;
  bool min = 3;
  bool preserve_aspect = 4;
}

message ImageDecoderArgs {
  enum ImageType {
    JPEG = 0;
    ANY = 1;
  }

  ImageType image_type = 1;
}

message PoseNMSArgs {
  int32 height = 1;
}

message BBoxNMSArgs {
  float scale = 1;
}

message PackedFileEnumeratorArgs {
  // For creating storehouse adapter
  string storage_type = 1;
  string bucket = 2;
  string region = 3;
  string endpoint = 4;
  // Path to the file to read
  string path = 5;
}

message PackedFileSourceArgs {
  // For creating storehouse adapter
  string storage_type = 1;
  string bucket = 2;
  string region = 3;
  string endpoint = 4;
}

message PackedFileElementArgs {
  // Path to read
  string path = 1;
  // Offset and size to read
  uint64 offset = 2;
  uint64 size = 3;
}

message FilesEnumeratorArgs {
  // For creating storehouse adapter
  string storage_type = 1;
  string bucket = 2;
  string region = 3;
  string endpoint = 4;
  // Path to the files to read
  repeated string paths = 5;
}

message FilesSourceArgs {
  // For creating storehouse adapter
  string storage_type = 1;
  string bucket = 2;
  string region = 3;
  string endpoint = 4;
}

message FilesElementArgs {
  // Path to read
  string path = 1;
}
